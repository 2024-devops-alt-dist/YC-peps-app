name: peps
services:
  postgres:
    image: postgres:16-alpine 
    container_name: peps-bdd
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data # Volume pour stocker les données. nom_du_volume:emplacement_dans_le_container           

  api:
    build:
      context: ./api # Chemin vers le Dockerfile de l'API
      target: dev # Spécifie l'étape de build à utiliser
    container_name: peps-api
    ports:
      - "8080:8080"
    depends_on: # Nom du service duquel on dépend
      - postgres
    restart: unless-stopped
    environment: 
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      DB_HOST: postgres # Nom du service de la base de données
      DB_PORT: 5432
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    volumes:
      - ./api:/app # monte ton code source
      - ~/.m2:/root/.m2 # Pour persister le cache Maven

  client:
    build:
      context: ./client # Chemin vers le Dockerfile du client
      target: dev
    container_name: peps-client
    volumes:
      - ./client:/app:cached # monte ton code source
      - client_node_modules:/app/node_modules
    ports:
      - "4200:4200"
    depends_on:
      - api
    command: ["npm", "start"]

volumes:
  postgresdata:
  client_node_modules: